name: Terraform Plan

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/workflows/run-apply.yml
      - .github/workflows/run-plan.yml
      - ReadMe.md
      - .gitignore
jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
        TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
        CONFIG_DIRECTORY: "./"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload-configuration
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          token: ${{ secrets.TF_API_TOKEN  }}
          organization: ${{ secrets.TF_ORGANIZATION }} 

      - name: Trigger Terraform Cloud Plan
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: create-run
        with:
          token: ${{ secrets.TF_API_TOKEN  }}
          hostname: app.terraform.io 
          organization: ${{ secrets.TF_ORGANIZATION }} 
          workspace: ${{ secrets.TF_WORKSPACE }} 
          message: "PR: ${{ github.event.pull_request.title }} | Commit: ${{ github.event.head_commit.message }}"
          plan_only: true

      - uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.create-run.outputs.plan_id }}
          token: ${{ secrets.TF_API_TOKEN  }}
          organization: ${{ secrets.TF_ORGANIZATION }} 

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('HCP Terraform Plan Output')
            })
            const output = `#### HCP Terraform Plan Output
               \`\`\`\n
               Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
               \`\`\`
               [HCP Terraform Plan](${{ steps.create-run.outputs.run_link }})
               `
            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - id: terraform-cloud-check-run-status
        if: ${{ steps.create-run.outputs.run_status != 'planned_and_finished'}}
        run: |
          echo "HCP Terraform Run Failed or Requires Further Attention"
          echo "Run Status: '${{ steps.create-run.outputs.run_status }}'"
          echo "${{ steps.create-run.outputs.run_link }}"
          exit 1